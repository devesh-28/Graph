import java.util.*;
class graph1{
    public static void main(String[] args) {
        int v=5;
        ArrayList<ArrayList<Integer>>adj=new ArrayList<ArrayList<Integer>>(v);
        for(int i=0;i<v;i++)
        {
            adj.add(new ArrayList<Integer>());
        }
        //used static keyword so we can call the function without initializing an object
        addEdge(adj, 0, 1);
        addEdge(adj, 0, 4);
        addEdge(adj, 1, 2);
        addEdge(adj, 1, 3);
        addEdge(adj, 1, 4);
        addEdge(adj, 2, 3);
        addEdge(adj, 3, 4);
        printgraph(adj);
    }
    public static void addEdge( ArrayList<ArrayList<Integer>>adj,int v,int u)
    {
        adj.get(v).add(u);
        adj.get(u).add(v);
    }
    public static void printgraph( ArrayList<ArrayList<Integer>>adj){
        //first for loop is initialized for the size of adjacent list
        for(int i=0;i< adj.size();i++) {
            System.out.println("\nAdjacency list of vertex" + " "+i);
            //Second for loo[ is initialized for the size of a particular vertex form 0-i
            //as we used adj.get(i)-> it will go to i while (.size()) will take out the size from 0-i;
            for (int j = 0; j < adj.get(i).size(); j++) {
                System.out.print(" -> " + adj.get(i).get(j));
            }
            System.out.println();
        }
    }

}
